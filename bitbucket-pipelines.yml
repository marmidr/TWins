# This is a sample build configuration for C++ â€“ Make.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: gcc:8

# https://confluence.atlassian.com/bitbucket/configure-bitbucket-pipelines-yml-792298910.html

# maximum amount of minutes a step can execute at a global level or at a step level
options:
  max-time: 10

# shallow clone
clone:
  #depth: 3
  depth: full # SonarCloud scanner needs the full history to assign issues properly

pipelines:
  default:
    - step:
        name: Default build and UT
        caches:
          - pip
        script:
          - apt-get update
          - apt-get install -y cmake
          - git submodule update --init --remote
          - g++ --version
          # build and test
          - mkdir build && cd build
          - cmake -DCMAKE_BUILD_TYPE=Debug -DTWINS_USE_SANITIZERS=OFF -DTWINS_BUILD_UT=ON ..
          - make -j4
          - ctest -V --output-on-failure --timeout 20
          # create coverage report
          #- apt-get install -y python-pip
          #- pip install cpp-coveralls gcovr
          #- coveralls -b . -r .. -i "lib/src" -i "lib/inc" -t W1vBS6Hvg6wtzaqdV2E4B4OVTIvxJmNXI
    - step:
        name: Configure SonarQube
        script:
          - apt-get update
          - apt-get install -y cmake
          - git submodule update --init --remote
          #
          - export SONAR_SCANNER_VERSION=4.4.0.2170
          - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
          - export SONAR_SCANNER_OPTS="-server"
          - export BW_OUTPUT=$HOME/.sonar/bw-output
          - mkdir -p $BW_OUTPUT
          # download sonar qube utilities
          - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
          - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
          - curl --create-dirs -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          - unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          - export PATH=$HOME/.sonar/build-wrapper-linux-x86:$PATH
          # run cmake
          - mkdir sonarbuild && cd sonarbuild
          - cmake -DCMAKE_BUILD_TYPE=Debug -DTWINS_USE_SANITIZERS=OFF -DTWINS_BUILD_UT=ON ..
          # run scanner
          - build-wrapper-linux-x86-64 --out-dir $BW_OUTPUT make
          - cd ..
          - sonar-scanner -Dsonar.cfamily.build-wrapper-output=$BW_OUTPUT -Dsonar.sources=lib -Dsonar.sourceEncoding=UTF-8
